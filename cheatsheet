#foo        // <any id="foo">
foo         // <foo>
.foo        // <any class="foo">
[foo=bar]   // <any foo="bar">
foo bar     // <foo><bar></foo>


d3.selectAll("pre, code") is supposedly $("pre, code")



Use caution with method chaining: append returns a new selection

var h1 = d3.selectAll("section")
    .style("background", "steelblue")
  .append("h1")
    .text("Hello!");

With method chaining, I normally use four spaces to indent. However, I use two spaces for operations that change the selection, such as append. This causes operations that change the context to stick out.
In this snippet, the entire expression evaluates to the appended <h1> elements, even though we started by selecting <section> elements.

That line thing was done like this

(function() {

var width = 1280,
    height = 720,
    x0,
    y0;

var svg = d3.select("#line").append("svg")
    .attr("class", "chart")
    .attr("width", width)
    .attr("height", height)
    .on("mousemove", mousemove);

svg.append("rect")
    .attr("class", "background")
    .attr("width", width)
    .attr("height", height);

function mousemove() {
  var m = d3.mouse(this),
      x1 = m[0],
      y1 = m[1];

  if (x0 != null) {
    svg.append("line")
      .attr("x1", x0)
      .attr("y1", y0)
      .attr("x2", x1)
      .attr("y2", y1)
      .style("stroke-width", "3px")
      .style("stroke", "#fff")
    .transition()
      .duration(750)
      .remove();

    x1 = y1 = null;
  }

  x0 = x1;
  y0 = y1;
}

})()